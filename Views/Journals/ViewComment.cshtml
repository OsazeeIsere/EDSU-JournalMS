@model IEnumerable<EDSU_JournalMS.Models.Comment>
@using Microsoft.AspNetCore.Authorization;
@using Microsoft.AspNetCore.Identity;
@using EDSU_JournalMS.Authorization;

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-action="Index">Index</a>
</p>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Journals.Title)
            </th>
@*            <th>
                @Html.DisplayNameFor(model => model.Journals.Authors)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Journals.Keywords)
            </th>*@
            <th>
                @Html.DisplayNameFor(model => model.Journals.Abstract)
            </th>
            @*<th>
                @Html.DisplayNameFor(model => model.Journals.NoOfPages)
            </th>*@
            <th>
                @Html.DisplayNameFor(model => model.CommentBody)
            </th>
           
            <th>
                @Html.DisplayNameFor(model => model.CommentDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.ReviewerNo)
            </th>
           @* @{
                    var isManager = User.IsInRole(Constants.ArticleReviewerRole);
                    var isAdmin = User.IsInRole(Constants.ArticleSuperAdminRole);

                    if (isAdmin == false||isManager!=true)
                    {
                       <th>
                      @Html.DisplayNameFor(model => model.UploadedBy)
                     </th>
                    }
                }
            *@
@*             <th>
                @Html.DisplayNameFor(model => model.Journals.Status)
            </th>
           
*@            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            @*<td>
                @Html.DisplayFor(modelItem => item.Authors)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Keywords)
            </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.Abstract)
            </td>
           
            @*<td>
                @Html.DisplayFor(modelItem => item.Journals.NoOfPages)
            </td>*@
            <td>
                @Html.DisplayFor(modelItem => item.CommentBody)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CommentDate)
            </td>
               
            <td>
                @Html.DisplayFor(modelItem => item.ReviewerNo)
            </td>
            @*<td>
                @Html.DisplayFor(modelItem => item.Status)
            </td>*@
           

           @{
            //checking if an applicant has applied before
           // var currentUser = UserManager.GetUserId(User);
            var isManager = User.IsInRole(Constants.ArticleReviewerRole);
            var isAdmin = User.IsInRole(Constants.ArticleSuperAdminRole);

            if (isAdmin == true)
            {
                <td>
                <a asp-action="Details" asp-route-id="@item.Id">Check if Acceptable</a> |
                <a asp-action="Edit" asp-route-id="@item.Id">Assign Reviewers</a>
                @*<a asp-action="Delete" asp-route-id="@item.Id">Delete</a>*@
            </td>
             @*   return Forbid();*@
            }
            
        }
         @{
            //checking if an applicant has applied before
           // var currentUser = UserManager.GetUserId(User);

            if (isManager == true)
            {
                <td>
                <a asp-action="Details" asp-route-id="@item.Id">Details</a> |
                <a asp-action="Comment" asp-route-id="@item.Id">Add Comment</a>
                @*<a asp-action="Delete" asp-route-id="@item.Id">Delete</a>*@
            </td>
             @*   return Forbid();*@
            }
            
        }
        </tr>
}
    </tbody>
</table>
